plugins {
    id "fabric-loom"
    id "maven-publish"
    id "com.matthewprenger.cursegradle"
    id "com.modrinth.minotaur"
    id "org.jetbrains.changelog"
    id 'com.palantir.git-version'
}

var targetJdk = Integer.parseInt(project.java_compiler_version)

allprojects {
    version = "${project.mod_version}+${versionDetails().gitHash[0..7]}~lonefelidae16"
    group = project.maven_group

    repositories {
        maven {
            url = uri("https://api.modrinth.com/maven/")
        }
        maven {
            name = "stashymane's repo"
            url = "https://repo.stashy.dev/releases"
        }
        maven {
            url = "https://artifactory.kow08absty.com/artifactory/fabricmc"
        }
    }
}

base {
    archivesName = project.archives_base_name
}

var versionTitle = "$project.mod_version for $project.minecraft_version"

allprojects {
    project.ext['moduleId'] = 'unnamed'
    project.ext['moduleName'] = ''
    project.ext['mod_license'] = project.mod_license

    tasks.withType(ProcessResources).configureEach {
        doFirst {
            var props = [
                    "mod_page",
                    "mod_sources",
                    "mod_issues",
                    "mod_license"
            ].collectEntries {
                [it, project.properties[it]]
            }

            props.putAll([
                    'moduleId': project.ext['moduleId'],
                    'moduleName': project.ext['moduleName'],
                    'mod_license': project.ext['mod_license'],
                    'version': project.version
            ])

            filesMatching("fabric.mod.json") {
                expand props
            }
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation include("me.lonefelidae16:groominglib:${project.groom_version}") {
        changing = true
    }

    // Extra Sounds modules
    implementation include(project(path: 'logics', configuration: 'namedElements'))
    // 1.21 family
    implementation include(project(path: 'versioned:es1.21', configuration: 'namedElements'))
    // 1.20 family
    implementation include(project(path: 'versioned:es1.20.5', configuration: 'namedElements'))
    implementation include(project(path: 'versioned:es1.20.2', configuration: 'namedElements'))
    implementation include(project(path: 'versioned:es1.20', configuration: 'namedElements'))

    // Sound Categories modules
    implementation include(project(path: 'sound-categories', configuration: 'namedElements'))
    implementation project(path: 'sound-categories:shared', configuration: 'namedElements')
    // 1.21 family
    implementation project(path: 'sound-categories:versioned:sc1.21', configuration: 'namedElements')
    // 1.20 family
    implementation project(path: 'sound-categories:versioned:sc1.20.5', configuration: 'namedElements')
    implementation project(path: 'sound-categories:versioned:sc1.20.3', configuration: 'namedElements')
    implementation project(path: 'sound-categories:versioned:sc1.20.2', configuration: 'namedElements')
    implementation project(path: 'sound-categories:versioned:sc1.20', configuration: 'namedElements')
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJdk)
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.toVersion(targetJdk)
    targetCompatibility = JavaVersion.toVersion(targetJdk)
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        maven {
            url = "https://repo.stashy.dev"
            credentials {
                username = project.hasProperty("publish_username") ? project.publish_username : ""
                password = project.hasProperty("publish_password") ? project.publish_password : ""
            }
        }
    }
}
